{
    "parameters": [
        {
            "meta": {
                "config": {
                    "url": "integrations/options",
                    "body": {
                        "name": "gemini",
                        "secret": "{{parameters.secret}}",
                        "resource": "models",
                        "operation": "models.generate_text",
                        "loadOptionsMethod": "getModels"
                    },
                    "method": "post",
                    "urlType": "options",
                    "labelKey": "name",
                    "valueKey": "id"
                },
                "options": [],
                "htmlProps": {
                    "allowDynamic": true
                },
                "validation": {
                    "required": true
                },
                "description": "Select the model to fetch the details",
                "displayName": "Model",
                "displayType": "select",
                "placeholder": "Select a model"
            },
            "name": "model"
        },
        {
            "meta": {
                "children": [
                    {
                        "meta": {
                            "value": "user",
                            "options": [
                                {
                                    "label": "User (Message from the user)",
                                    "value": "user"
                                },
                                {
                                    "label": "Assistant (Message from the assistant)",
                                    "value": "assistant"
                                }
                            ],
                            "htmlProps": {
                                "allowDynamic": true
                            },
                            "validation": {
                                "required": false,
                                "requiredDetail": {
                                    "errorMsg": "Please select the role for the message."
                                }
                            },
                            "description": "Specify whether the message is sent by the user or the assistant.",
                            "displayName": "Message Role",
                            "displayType": "select",
                            "placeholder": "Choose the role for this message"
                        },
                        "name": "role"
                    },
                    {
                        "meta": {
                            "children": [
                                {
                                    "meta": {
                                        "htmlProps": {
                                            "showInfoIcon": true
                                        },
                                        "validation": {
                                            "required": false,
                                            "infoDetail": {
                                                "infoMsg": "Add message to the content"
                                            }
                                        },
                                        "displayName": "text",
                                        "displayType": "text"
                                    },
                                    "name": "text"
                                }
                            ],
                            "displayName": "Text parts",
                            "displayType": "array",
                            "placeholder": "Enter the message parts"
                        },
                        "name": "parts"
                    }
                ],
                "validation": {
                    "required": false
                },
                "description": "Provide the chat history to simulate an ongoing conversation.",
                "displayName": "Chat History",
                "displayType": "array",
                "placeholder": "Enter the chat history"
            },
            "name": "chat"
        },
        {
            "meta": {
                "children": [
                    {
                        "meta": {
                            "validation": {
                                "required": true
                            },
                            "displayName": "Function Name",
                            "displayType": "text",
                            "placeholder": "Enter the name of the function"
                        },
                        "name": "name"
                    },
                    {
                        "meta": {
                            "validation": {
                                "required": true,
                                "maxLength": 1000,
                                "minLength": 1
                            },
                            "displayName": "Description",
                            "displayType": "text",
                            "placeholder": "Enter the function description"
                        },
                        "name": "description"
                    },
                    {
                        "meta": {
                            "children": [
                                {
                                    "meta": {
                                        "validation": {
                                            "required": true
                                        },
                                        "displayName": "Property Name",
                                        "displayType": "text",
                                        "placeholder": "Enter the property name"
                                    },
                                    "name": "property_name"
                                },
                                {
                                    "meta": {
                                        "validation": {
                                            "required": true,
                                            "maxLength": 1000,
                                            "minLength": 1
                                        },
                                        "displayName": "Property Description",
                                        "displayType": "text",
                                        "placeholder": "Enter the property description"
                                    },
                                    "name": "property_description"
                                },
                                {
                                    "meta": {
                                        "options": [
                                            {
                                                "label": "string",
                                                "value": "string"
                                            },
                                            {
                                                "label": "number",
                                                "value": "number"
                                            },
                                            {
                                                "label": "boolean",
                                                "value": "boolean"
                                            }
                                        ],
                                        "htmlProps": {
                                            "allowDynamic": true
                                        },
                                        "validation": {
                                            "required": true
                                        },
                                        "displayName": "Property Data Type",
                                        "displayType": "select",
                                        "placeholder": "Select a data type for the property"
                                    },
                                    "name": "property_data_type"
                                },
                                {
                                    "meta": {
                                        "options": [
                                            {
                                                "label": "Yes",
                                                "value": "true"
                                            },
                                            {
                                                "label": "No",
                                                "value": "false"
                                            }
                                        ],
                                        "validation": {
                                            "required": false
                                        },
                                        "displayName": "Is Required",
                                        "displayType": "select",
                                        "placeholder": "Mark if this parameter is required"
                                    },
                                    "name": "required"
                                }
                            ],
                            "validation": {
                                "required": true
                            },
                            "description": "Define the parameters required by the function.",
                            "displayName": "Parameters",
                            "displayType": "array",
                            "placeholder": "Enter the parameters for the function"
                        },
                        "name": "parameters"
                    }
                ],
                "validation": {
                    "required": true
                },
                "description": "Provide the function declarations to simulate an ongoing conversation.",
                "displayName": "Function Declarations",
                "displayType": "array",
                "placeholder": "Enter the Function Declarations"
            },
            "name": "function_declarations"
        },
        {
            "meta": {
                "value": "1024",
                "validation": {
                    "required": true
                },
                "description": "Limit the number of tokens generated in the response. Defaults to 1024.",
                "displayName": "Max Output Tokens",
                "displayType": "number",
                "placeholder": "Specify the maximum tokens to generate"
            },
            "name": "maxOutputTokens"
        },
        {
            "meta": {
                "max": 2,
                "min": 0,
                "step": 0.1,
                "value": 0.7,
                "htmlProps": {
                    "showInfoIcon": true
                },
                "validation": {
                    "required": true,
                    "infoDetail": {
                        "infoMsg": "Choose a value between 0.1 (Very Deterministic) and 1.0 (Highly Random)"
                    }
                },
                "description": "Control the randomness of the response. Lower values produce more deterministic outputs. Default is 0.7.",
                "displayName": "Temperature",
                "displayType": "slider"
            },
            "name": "temperature"
        },
        {
            "meta": {
                "value": "1",
                "htmlProps": {
                    "showInfoIcon": true
                },
                "validation": {
                    "required": true,
                    "infoDetail": {
                        "infoMsg": "Add value to the candidate count, or leave at default 1"
                    }
                },
                "description": "Specifies the number of generated responses to return. Currently, this value can only be set to 1. If unset, this will default to 1.",
                "displayName": "Candidate Count",
                "displayType": "number"
            },
            "name": "candidateCount"
        },
        {
            "meta": {
                "value": "0.95",
                "htmlProps": {
                    "showInfoIcon": true
                },
                "validation": {
                    "required": true,
                    "infoDetail": {
                        "infoMsg": "Add value to the topP or leave at default value"
                    }
                },
                "description": "Always selects the most probable token.",
                "displayName": "top P",
                "displayType": "number"
            },
            "name": "topP"
        },
        {
            "meta": {
                "value": "10",
                "htmlProps": {
                    "showInfoIcon": true
                },
                "validation": {
                    "required": true,
                    "infoDetail": {
                        "infoMsg": "Add value to the topK or leave at default value"
                    }
                },
                "description": "Chooses from the top 3 most probable tokens, adding randomness.",
                "displayName": "top K",
                "displayType": "number"
            },
            "name": "topK"
        }
    ],
    "definition": {
        "qs": {
            "key": "{{secrets.api_token}}"
        },
        "url": "https://generativelanguage.googleapis.com/v1beta/models/{{parameters.model}}:generateContent",
        "body": {
            "tools": [
                {
                    "function_declarations": "{{parameters.function_declarations}}"
                }
            ],
            "contents": "{{parameters.chat}}",
            "tool_config": {
                "function_calling_config": {
                    "mode": "NONE"
                }
            },
            "generationConfig": {
                "topK": "{{parameters.topK}}",
                "topP": "{{parameters.topP}}",
                "temperature": "{{parameters.temperature}}",
                "candidateCount": "{{parameters.candidateCount}}",
                "maxOutputTokens": "{{parameters.maxOutputTokens}}"
            }
        },
        "method": "post",
        "headers": {
            "Accept": "application/json",
            "Referer": "https://console.boltic.io",
            "Content-Type": "application/json"
        },
        "response": {
            "error": {
                "code": "{{response.status}}",
                "message": "{{response.data.error.message}}"
            },
            "output": "{{response.data}}"
        },
        "transform": {
            "body": "const updatedBody = JSON.parse(JSON.stringify(body)); if (updatedBody.tools && updatedBody.tools.length) { updatedBody.tools = updatedBody.tools.map(function (tool) { if (tool.function_declarations && Array.isArray(tool.function_declarations)) { const formattedFunctions = tool.function_declarations.map(function (func) { const formattedParams = { type: 'object', properties: {} }; if (func.parameters && Array.isArray(func.parameters)) { func.parameters.forEach(function (param) { formattedParams.properties[param.property_name] = { type: param.property_data_type, description: param.property_description }; }); } const requiredFields = func.parameters.filter(function (p) { return p.required === 'true'; }).map(function (p) { return p.property_name; }); if (requiredFields.length > 0) { formattedParams.required = requiredFields; } return { name: func.name, description: func.description, parameters: formattedParams }; }); tool.function_declarations = formattedFunctions; } return tool; }); } return updatedBody;"
        }
    }
}
