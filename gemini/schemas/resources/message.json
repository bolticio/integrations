{
    "getModels": {
        "definition": {
            "qs": {
                "key": "{{secrets.api_token}}"
            },
            "url": "https://generativelanguage.googleapis.com/v1/models",
            "method": "get",
            "headers": {
                "Accept": "application/json",
                "Referer": "https://console.boltic.io/"
            },
            "response": {
                "error": {
                    "code": "{{response.status}}",
                    "message": "{{response.data.message}}"
                },
                "output": "{{response.data}}"
            },
            "transform": {
                "output": "const updatedOutput = output?.models?.map((model) => { return { name: model.displayName, id: model.name.split('/')[1], }; }); return updatedOutput;"
            }
        }
    },
    "parameters": [
        {
            "meta": {
                "config": {
                    "url": "integrations/options",
                    "body": {
                        "name": "gemini",
                        "secret": "{{parameters.secret}}",
                        "resource": "message",
                        "operation": "message.generate_text",
                        "loadOptionsMethod": "getModels"
                    },
                    "method": "post",
                    "urlType": "options",
                    "labelKey": "name",
                    "valueKey": "id"
                },
                "options": [],
                "htmlProps": {
                    "allowDynamic": true
                },
                "validation": {
                    "required": true
                },
                "description": "Select the model to fetch the details",
                "displayName": "Model",
                "displayType": "select",
                "placeholder": "Select a model"
            },
            "name": "model"
        },
        {
            "meta": {
                "options": [
                    {
                        "label": "Version 1 (Stable)",
                        "value": "v1"
                    },
                    {
                        "label": "Version 1 Beta (Experimental)",
                        "value": "v1beta"
                    }
                ],
                "htmlProps": {
                    "allowDynamic": true
                },
                "validation": {
                    "required": true,
                    "requiredDetail": {
                        "errorMsg": "API version is required field."
                    }
                },
                "description": "Specify the version of the API to use for this request.",
                "displayName": "API Version",
                "displayType": "select",
                "placeholder": "Select API Version"
            },
            "name": "api_version"
        },
        {
            "meta": {
                "htmlProps": {
                    "maxRows": 6,
                    "minRows": 3,
                    "showCopyToClipboard": true
                },
                "validation": {
                    "required": true,
                    "maxLength": 1000,
                    "minLength": 1,
                    "requiredDetail": {
                        "errorMsg": "Prompt is required field."
                    }
                },
                "description": "Provide the input prompt for text generation. For better results, include context or instructions.",
                "displayName": "Prompt",
                "displayType": "text",
                "placeholder": "Enter the text prompt"
            },
            "name": "prompt"
        },
        {
            "meta": {
                "value": "1024",
                "validation": {
                    "required": true
                },
                "description": "Limit the number of tokens generated in the response. Defaults to 1024.",
                "displayName": "Max Output Tokens",
                "displayType": "number",
                "placeholder": "Specify the maximum tokens to generate"
            },
            "name": "maxOutputTokens"
        },
        {
            "meta": {
                "max": 2,
                "min": 0,
                "step": 0.1,
                "value": 0.7,
                "htmlProps": {
                    "showInfoIcon": true
                },
                "validation": {
                    "required": true,
                    "infoDetail": {
                        "infoMsg": "Choose a value between 0.1 (Very Deterministic) and 1.0 (Highly Random)"
                    }
                },
                "description": "Control the randomness of the response. Lower values produce more deterministic outputs. Default is 0.7.",
                "displayName": "Temperature",
                "displayType": "slider"
            },
            "name": "temperature"
        },
        {
            "meta": {
                "value": "1",
                "htmlProps": {
                    "showInfoIcon": true
                },
                "validation": {
                    "required": true,
                    "infoDetail": {
                        "infoMsg": "Add value to the candidate count, or leave at default 1"
                    }
                },
                "description": "Specifies the number of generated responses to return. Currently, this value can only be set to 1. If unset, this will default to 1.",
                "displayName": "Candidate Count",
                "displayType": "number"
            },
            "name": "candidateCount"
        },
        {
            "meta": {
                "value": "0.95",
                "htmlProps": {
                    "showInfoIcon": true
                },
                "validation": {
                    "required": true,
                    "infoDetail": {
                        "infoMsg": "Add value to the topP or leave at default value"
                    }
                },
                "description": "Always selects the most probable token.",
                "displayName": "top P",
                "displayType": "number"
            },
            "name": "topP"
        },
        {
            "meta": {
                "value": "10",
                "htmlProps": {
                    "showInfoIcon": true
                },
                "validation": {
                    "required": true,
                    "infoDetail": {
                        "infoMsg": "Add value to the topK or leave at default value"
                    }
                },
                "description": "Chooses from the top 3 most probable tokens, adding randomness.",
                "displayName": "top K",
                "displayType": "number"
            },
            "name": "topK"
        }
    ],
    "generate_description": {
        "definition": {
            "url": "https://generativeai.googleapis.com/{{parameters.api_version}}/models/{{parameters.model}}:generateContent",
            "body": {
                "contents": [
                    {
                        "parts": [
                            {
                                "text": "{{parameteres.prompt}}"
                            },
                            {
                                "inline_data": {
                                    "data": "{{parameteres.image_path}",
                                    "mime_type": "image/jpeg"
                                }
                            }
                        ]
                    }
                ]
            },
            "method": "post",
            "headers": {
                "Accept": "application/json",
                "Referer": "https://console.boltic.io/",
                "Content-Type": "application/json",
                "Authorization": "Bearer {{secrets.api_token}}"
            },
            "response": {
                "error": {
                    "code": "{{response.status}}",
                    "message": "{{response.data.error.message}}"
                },
                "output": "{{response.data.candidates[0].text}}"
            }
        },
        "parameters": [
            {
                "meta": {
                    "config": {
                        "url": "integrations/options",
                        "body": {
                            "name": "gemini",
                            "secret": "{{parameters.secret}}",
                            "resource": "message",
                            "operation": "message.generate_description",
                            "loadOptionsMethod": "getModels"
                        },
                        "method": "post",
                        "urlType": "options",
                        "labelKey": "name",
                        "valueKey": "id"
                    },
                    "options": [],
                    "htmlProps": {
                        "allowDynamic": true
                    },
                    "validation": {
                        "required": true
                    },
                    "description": "Select the model to fetch the details",
                    "displayName": "Model",
                    "displayType": "select",
                    "placeholder": "Select a model"
                },
                "name": "model"
            },
            {
                "meta": {
                    "options": [
                        {
                            "label": "Version 1 (Stable)",
                            "value": "v1"
                        },
                        {
                            "label": "Version 1 Beta (Experimental)",
                            "value": "v1beta"
                        }
                    ],
                    "htmlProps": {
                        "allowDynamic": true
                    },
                    "validation": {
                        "required": true,
                        "requiredDetail": {
                            "errorMsg": "An API version is required to proceed."
                        }
                    },
                    "description": "Specify the version of the API to use for this request.",
                    "displayName": "API Version",
                    "displayType": "select",
                    "placeholder": "Select API Version"
                },
                "name": "api_version"
            },
            {
                "meta": {
                    "value": "Describe how this product might be manufactured.",
                    "validation": {
                        "required": true
                    },
                    "description": "Provide the input text prompt to guide the description of the image.",
                    "displayName": "Prompt",
                    "displayType": "text",
                    "placeholder": "Enter the text prompt"
                },
                "name": "prompt"
            },
            {
                "meta": {
                    "htmlProps": {
                        "accept": ".jpg,.png",
                        "maxSize": 5242880,
                        "preview": true,
                        "maxFiles": 2,
                        "multiple": true
                    },
                    "validation": {
                        "required": true,
                        "requiredDetail": {
                            "errorMsg": "Image is a required field"
                        }
                    },
                    "description": "Upload the image that the model will use to generate the description.",
                    "displayName": "Upload the image",
                    "displayType": "file"
                },
                "name": "image_path"
            }
        ]
    },
    "definition": {
        "qs": {
            "key": "{{secrets.api_token}}"
        },
        "url": "https://generativelanguage.googleapis.com/{{parameters.api_version}}/models/{{parameters.model}}:generateContent",
        "body": {
            "contents": [
                {
                    "parts": [
                        {
                            "text": "{{parameters.prompt}}"
                        }
                    ]
                }
            ],
            "safetySettings": [
                {
                    "category": "HARM_CATEGORY_HARASSMENT",
                    "threshold": "BLOCK_NONE"
                },
                {
                    "category": "HARM_CATEGORY_HATE_SPEECH",
                    "threshold": "BLOCK_NONE"
                },
                {
                    "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
                    "threshold": "BLOCK_NONE"
                },
                {
                    "category": "HARM_CATEGORY_DANGEROUS_CONTENT",
                    "threshold": "BLOCK_NONE"
                }
            ],
            "generationConfig": {
                "topK": "{{parameters.topK}}",
                "topP": "{{parameters.topP}}",
                "temperature": "{{parameters.temperature}}",
                "candidateCount": "{{parameters.candidateCount}}",
                "maxOutputTokens": "{{parameters.maxOutputTokens}}"
            }
        },
        "method": "post",
        "headers": {
            "Referer": "https://console.boltic.io/",
            "Content-Type": "application/json"
        },
        "response": {
            "error": {
                "code": "{{response.status}}",
                "message": "{{response.data}}"
            },
            "output": "{{response.data}}"
        }
    }
}
