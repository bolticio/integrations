{
    "id": "8fe8bb9f-7c00-4cbc-b4d9-6cdac39cbafb",
    "integration_group_id": "42e6012c-8bd7-4f71-9fdc-f7dac518ab8f",
    "name": "perplexity",
    "slug": "blt-int.perplexity",
    "description": {
        "trigger": "",
        "integration": "Perplexity AI allows seamless integration of Meta's Sonar LLM into workflows for automation and productivity."
    },
    "icon": "https://cdn.pixelbin.io/v2/fyndcloud/original/Temporal/Uploads/bolt/undefined/images/test_1735281895758_1739791610710.webp",
    "activity_type": "customActivity",
    "trigger_type": null,
    "documentation": "## Perplexity AI Integration\n\nIntegrate your application with the Perplexity AI to harness advanced AI capabilities powered by Metaâ€™s Sonar. This documentation outlines the integration process, key features, and supported operations.\n\n---\n\n## Introduction\n\nThe Perplexity AI enables seamless communication with Sonar, empowering you to build AI-driven features such as conversational AI and more.\n\nThis guide provides essential integration details, including supported operations and usage examples.\n\n---\n\n## Prerequisites\n\nBefore using the Perplexity AI, ensure you have:\n\n- A Perplexity AI Console account.\n- An API key for secure authentication.\n- Python 3.7+ or TypeScript 4.5+ (if using the SDKs).\n- For step-by-step setup instructions, refer to the Perplexity AI documentation.\n\n---\n\n## Supported Authentication Methods\n\n- **API Key**\n\n---\n\n## Basic Operations\n\n- **Chat Completion:** Generate responses powered by Sonar's AI capabilities.\n\nThe Chat Completion operation allows interaction with Sonar to:\n\n- Generate AI responses.\n- Complete prompts with appropriate responses.\n- Facilitate single-turn or multi-turn conversations.\n- While configuring the integration please ensure that \n\n---\n\n## Key Features\n\n- **Models Support:** Use any of (sonar-reasoning-pro, sonar-reasoning, sonar-pro, sonar) models to achieve desired output with optimal costs.\n- **Text Input and Output:** Submit prompts either as (user, assistant, system) to receive AI-generated responses and control the model's behaviour.\n- **Temperature Control:** Adjust the creativity level of Sonar's responses.\n- **Token Limitation:** Limit the output tokens generated by the model to save costs.\n- **Conversation Continuation:** Generate the next message in a conversation based on input messages.",
    "active": true,
    "properties": null,
    "account_id": [],
    "region": [],
    "tags": [
        {
            "label": " ",
            "category": "l1",
            "background": "#FCED9F"
        }
    ],
    "meta": {
        "ai_description": {
            "trigger": "",
            "integration": "The perplexity activity integrates Meta's Sonar LLM into workflows, enabling interactive chat and custom API operations, and should be used when automating tasks that require conversational AI or custom LLM-based solutions to enhance productivity."
        }
    },
    "status": "published",
    "parent_id": "8fe8bb9f-7c00-4cbc-b4d9-6cdac39cbafb",
    "created_by": "00000000000000000000000000000000f5849367f223243c1de716a10964f9d3abc7f41bcc743619efd7f657a427089034d11e5affb835748bc2eb14b9685057f9fd998121a5274408a437fa6e7fdddc79641f3b113b2a381717994832708c15",
    "modified_by": "0000000000000000000000000000000004e7e2a78c9c69fa133bd516912e0143ed632e6e901f5cfea59cb6bb19f2de18",
    "created_at": "2025-02-17T11:26:55.125Z",
    "updated_at": "2025-06-25T14:49:11.902Z"
}
