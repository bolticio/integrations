{
    "parameters": [
        {
            "meta": {
                "config": {
                    "url": "integrations/options",
                    "body": {
                        "name": "openrouter",
                        "secret": "{{parameters.secret}}",
                        "resource": "chat",
                        "operation": "chat.multiCompletionWithText",
                        "loadOptionsMethod": "getAllModels"
                    },
                    "method": "post",
                    "urlType": "options",
                    "labelKey": "name",
                    "valueKey": "id"
                },
                "htmlProps": {
                    "allowDynamic": true
                },
                "validation": {
                    "required": true,
                    "requiredDetail": {
                        "errorMsg": "Model is required field"
                    }
                },
                "description": "Name of the model to use.",
                "displayName": "Model",
                "displayType": "autocomplete",
                "placeholder": "Select a model"
            },
            "name": "modelId"
        },
        {
            "meta": {
                "children": [
                    {
                        "meta": {
                            "value": "user",
                            "options": [
                                {
                                    "label": "User (Message from the user)",
                                    "value": "user"
                                },
                                {
                                    "label": "Assistant (Message from the assistant)",
                                    "value": "assistant"
                                }
                            ],
                            "htmlProps": {
                                "allowDynamic": true
                            },
                            "validation": {
                                "required": true,
                                "requiredDetail": {
                                    "errorMsg": "Please select the role for the message."
                                }
                            },
                            "description": "Specify whether the message is sent by the user or the assistant.",
                            "displayName": "Message Role",
                            "displayType": "select",
                            "placeholder": "Choose the role for this message"
                        },
                        "name": "role"
                    },
                    {
                        "meta": {
                            "htmlProps": {
                                "showInfoIcon": true
                            },
                            "validation": {
                                "required": true,
                                "infoDetail": {
                                    "infoMsg": "Add message to the content"
                                }
                            },
                            "description": "This will be the prompt Eg. Tell me a fun factor",
                            "displayName": "Content",
                            "displayType": "textarea",
                            "placeholder": "Enter the message part."
                        },
                        "name": "content"
                    }
                ],
                "validation": {
                    "required": true,
                    "infoDetail": {
                        "infoMsg": "Add message to the content"
                    }
                },
                "description": "Provide the chat history to simulate an ongoing conversation.",
                "displayName": "Messages",
                "displayType": "array",
                "placeholder": "Enter the chat history"
            },
            "name": "chat"
        },
        {
            "meta": {
                "value": "1024",
                "validation": {
                    "required": true
                },
                "description": "Limit the number of tokens generated in the response. Defaults to 1024.",
                "displayName": "Max Output Tokens",
                "displayType": "number",
                "placeholder": "Specify the maximum tokens to generate"
            },
            "name": "maxOutputTokens"
        },
        {
            "meta": {
                "max": 2,
                "min": 0,
                "step": 0.1,
                "value": 0.7,
                "htmlProps": {
                    "showInfoIcon": true
                },
                "validation": {
                    "required": true,
                    "infoDetail": {
                        "infoMsg": "Choose a value between 0.1 (Very Deterministic) and 2.0 (Highly Random)"
                    }
                },
                "description": "Control the randomness of the response. Lower values produce more deterministic outputs. Default is 0.7.",
                "displayName": "Temperature",
                "displayType": "slider"
            },
            "name": "temperature"
        }
    ],
    "getAllModels": {
        "definition": {
            "url": "https://openrouter.ai/api/v1/models",
            "method": "get",
            "response": {
                "error": {
                    "code": "{{response.status}}",
                    "message": "{{response.data.error.message}}"
                },
                "output": "{{response.data.data}}"
            }
        },
        "parameters": []
    },
    "definition": {
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "body": {
            "model": "{{parameters.modelId}}",
            "messages": "{{parameters.chat}}"
        },
        "method": "post",
        "headers": {
            "Content-Type": "application/json",
            "Authorization": "Bearer {{secrets.api_key}}"
        },
        "response": {
            "error": {
                "code": "{{response.status}}",
                "message": "{{response.data.error.message}}"
            },
            "output": "{{response.data}}"
        }
    }
}
