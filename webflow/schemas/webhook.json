{
    "test": {
        "form_submission": {
            "definition": {
                "qs": {},
                "url": "https://api.webflow.com/v2/forms/{{parameters.form_id}}",
                "method": "get",
                "headers": {
                    "Accept": "application/json",
                    "Authorization": "Bearer {{secrets.access_token}}"
                },
                "response": {
                    "error": {
                        "code": "{{response.status}}",
                        "message": "{{response.data.message}}"
                    },
                    "output": "{{response.data}}"
                },
                "transform": {
                    "output": "const sampleOutput = { triggerType: 'form_submission', payload: { name: output.displayName, siteId: output.siteId, data: {}, submittedAt: new Date().toISOString(), id: 'sample-id-12345', formId: output.id || null, formElementId: output.formElementId, pageId: output.pageId, publishedPath: '/sample-path', output: [] } }; for (const fieldId in output.fields) { const field = output.fields[fieldId]; sampleOutput.payload.data[field.displayName] = field.placeholder || `Sample value for ${field.displayName}`; } return sampleOutput;"
                }
            }
        }
    },
    "attach": {
        "definition": {
            "url": "https://api.webflow.com/v2/sites/{{parameters.site_id}}/webhooks",
            "body": {
                "url": "{{webhook.url}}",
                "triggerType": "{{parameters.operation}}"
            },
            "method": "post",
            "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "Authorization": "Bearer {{secrets.access_token}}"
            },
            "response": {
                "error": {
                    "code": "{{response.data.code}}",
                    "message": "{{response.data.message}}"
                },
                "output": "{{response.data}}"
            }
        }
    },
    "detach": {
        "definition": {
            "url": "https://api.webflow.com/v2/webhooks/{{webhook.id}}",
            "method": "delete",
            "headers": {
                "Accept": "application/json",
                "Authorization": "Bearer {{secrets.access_token}}"
            },
            "response": {
                "error": {
                    "code": "{{response.data.code}}",
                    "message": "{{response.data.message}}"
                },
                "output": "{{response.data}}"
            }
        }
    },
    "update": {},
    "getForms": {
        "definition": {
            "url": "https://api.webflow.com/v2/sites/{{parameters.site_id}}/forms",
            "method": "get",
            "headers": {
                "Accept": "application/json",
                "Authorization": "Bearer {{secrets.access_token}}"
            },
            "response": {
                "error": {
                    "code": "{{response.status}}",
                    "message": "{{response.data.message}}"
                },
                "output": "{{response.data.forms}}"
            },
            "transform": {
                "output": "return Object.values(output.reduce((acc, item) => (acc[`${item.pageName}-${item.displayName}`] ??= { displayName: `(${item.pageName}) ${item.displayName}`, id: item.id }, acc), {}));"
            },
            "pagination": {
                "qs": {
                    "limit": 20,
                    "offset": "{{response.data.pagination.limit}} + {{response.data.pagination.offset}}"
                },
                "type": "offset",
                "default": {
                    "limit": 20,
                    "offset": 0
                },
                "condition": "{{response.data.pagination.offset}} < {{response.data.pagination.total}}"
            }
        }
    },
    "getSites": {
        "definition": {
            "qs": {
                "limit": 100
            },
            "url": "https://api.webflow.com/v2/sites",
            "method": "get",
            "headers": {
                "Accept": "application/json",
                "Authorization": "Bearer {{secrets.access_token}}"
            },
            "response": {
                "error": {
                    "code": "{{response.status}}",
                    "message": "{{response.data.message}}"
                },
                "output": "{{response.data.sites}}"
            }
        }
    },
    "parameters": [
        {
            "meta": {
                "config": {
                    "url": "/WEBFLOW?current_page=1&page_size=999",
                    "method": "get",
                    "urlType": "secret",
                    "labelKey": "name",
                    "valueKey": "_id"
                },
                "options": [],
                "htmlProps": {
                    "showAddNew": true
                },
                "validation": {
                    "required": true
                },
                "description": "Webflow is a secure partner with Boltic. Your credentials are encrypted & can be removed at any time.",
                "displayName": "Webflow Account",
                "displayType": "autocomplete",
                "placeholder": "Select Webflow Account"
            },
            "name": "secret"
        },
        {
            "meta": {
                "options": [
                    {
                        "label": "Webhook",
                        "value": "webhook"
                    }
                ],
                "validation": {
                    "required": true
                },
                "displayName": "Resource",
                "displayType": "select",
                "dependencies": {
                    "conditions": [
                        {
                            "field": "secret",
                            "operator": "NOT_EMPTY"
                        }
                    ]
                }
            },
            "name": "resource"
        },
        {
            "meta": {
                "options": [
                    {
                        "label": "Form Submission",
                        "value": "webhook.form_submission"
                    }
                ],
                "validation": {
                    "required": true
                },
                "description": "",
                "displayName": "Events",
                "displayType": "select",
                "placeholder": "",
                "dependencies": {
                    "conditions": [
                        {
                            "field": "secret",
                            "operator": "NOT_EMPTY"
                        },
                        {
                            "field": "resource",
                            "value": "webhook",
                            "operator": "EQUALS"
                        }
                    ]
                }
            },
            "name": "operation"
        }
    ],
    "form_submission": {
        "attach": {
            "definition": {
                "body": {
                    "filter": {
                        "id": "{{parameters.form_id}}"
                    }
                }
            }
        },
        "parameters": [
            {
                "meta": {
                    "config": {
                        "url": "integrations/options",
                        "body": {
                            "name": "webflow",
                            "secret": "{{parameters.secret}}",
                            "webhook": true,
                            "resource": "webhook",
                            "operation": "webhook.form_submission",
                            "loadOptionsMethod": "getSites"
                        },
                        "method": "post",
                        "urlType": "options",
                        "labelKey": "displayName",
                        "valueKey": "id"
                    },
                    "options": [],
                    "validation": {
                        "required": true
                    },
                    "description": "Select the site that you would like to receive notifications from.",
                    "displayName": "Webflow Site",
                    "displayType": "select",
                    "placeholder": "",
                    "dependencies": {
                        "conditions": [
                            {
                                "field": "secret",
                                "operator": "NOT_EMPTY"
                            },
                            {
                                "field": "resource",
                                "value": "webhook",
                                "operator": "EQUALS"
                            },
                            {
                                "field": "operation",
                                "value": "webhook.form_submission",
                                "operator": "EQUALS"
                            }
                        ]
                    }
                },
                "name": "site_id"
            },
            {
                "meta": {
                    "config": {
                        "url": "integrations/options",
                        "body": {
                            "name": "webflow",
                            "secret": "{{parameters.secret}}",
                            "site_id": "{{parameters.site_id}}",
                            "webhook": true,
                            "resource": "webhook",
                            "operation": "webhook.form_submission",
                            "loadOptionsMethod": "getForms"
                        },
                        "method": "post",
                        "urlType": "options",
                        "labelKey": "displayName",
                        "valueKey": "id",
                        "condition": "{{parameters.site_id}}"
                    },
                    "options": [],
                    "validation": {
                        "required": true
                    },
                    "description": "Forms will only show here if they have been published and have received at least 1 submission.",
                    "displayName": "Form Name",
                    "displayType": "select",
                    "placeholder": "",
                    "dependencies": {
                        "conditions": [
                            {
                                "field": "secret",
                                "operator": "NOT_EMPTY"
                            },
                            {
                                "field": "resource",
                                "value": "webhook",
                                "operator": "EQUALS"
                            },
                            {
                                "field": "operation",
                                "value": "webhook.form_submission",
                                "operator": "EQUALS"
                            },
                            {
                                "field": "site_id",
                                "operator": "NOT_EMPTY"
                            }
                        ]
                    }
                },
                "name": "form_id"
            }
        ]
    },
    "validateRequest": {
        "oauth2": "const requestBody = JSON.stringify(req.body); const timestamp = req.headers['x-webflow-timestamp']; const providedSignature = req.headers['x-webflow-signature']; function verifyWebflowSignature(timestamp, requestBody, providedSignature) { try { const requestTimestamp = parseInt(timestamp, 10); const data = `${requestTimestamp}:${requestBody}`; const hash = crypto.createHmac('sha256', '{{secrets.client_secret}}') .update(data) .digest('hex'); if ( !crypto.timingSafeEqual( Buffer.from(hash, 'hex'), Buffer.from(providedSignature, 'hex') ) ) { throw new Error('Invalid signature'); } const currentTime = Date.now(); if (currentTime - requestTimestamp > 300000) { throw new Error('Request is older than 5 minutes'); } return true; } catch (err) { console.error(`Error verifying signature: ${err.message}`); return false; } } if (!verifyWebflowSignature(timestamp, requestBody, providedSignature)) { return res.status(400).send('Invalid signature'); }",
        "access_token": ""
    }
}
